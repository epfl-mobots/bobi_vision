#!/usr/bin/env python
PACKAGE = "bobi_vision"

from dynamic_reconfigure.parameter_generator_catkin import *
from global_params import *

gen = ParameterGenerator()

gen.add("num_agents",    int_t,    0, "Number of individuals to track", 2,  0, 100)
gen.add("num_background_samples",    int_t,    0, "Number of background samples for the subtractor", 100,  0, 10000)
gen.add("bstor_history",    int_t,    0, "History of frames for the subtractor", 100,  0, 10000)
gen.add("var_threshold",    double_t,    0, "Variance threshold", 2,  0, 1000)
gen.add("detect_shadows",   bool_t,   0, "Detect shadows",  False)
gen.add("learning_rate",    double_t,    0, "Learning rate for the subtractor", 0.05,  0, 1)
gen.add("relearning_rate",    double_t,    0, "Learning rate for the subtractor for re-learning", 0.001,  0, 1)
gen.add("min_contour_size",    int_t,    0, "Minimum size of contours to accept", 15,  0, 1000)

gen.add("quality_level",    double_t,    0, "Quality level for good features to track", 0.06,  0, 1000)
gen.add("min_distance",    double_t,    0, "Minimume distance between corners to accept", 4,  0, 500)
gen.add("block_size",    int_t,    0, "Minimnum block size for good features to track", 4,  0, 100)
gen.add("use_harris_dtor",   bool_t,   0, "Use Harris detector",  False)
gen.add("k",    double_t,    0, "Harris k value", 0.03,  0, 2)
gen.add("reset_background_dtor",   bool_t,   0, "Reset background detector",  False)

gen.add("threshold_new_value",    int_t,    0, "Value for binary threshold", 255,  0, 255)
gen.add("threhold_value",    int_t,    0, "Value for pixels under the threshold", 132,  0, 255)


gen.add("el_dim_x",    int_t,    0, "Structuring element dim x", 3,  0, 100)
gen.add("el_dim_y",    int_t,    0, "Structuring element dim y", 3,  0, 100)
gen.add("el_x",    int_t,    0, "Structuring coord x", 1,  -1, 100)
gen.add("el_y",    int_t,    0, "Structuring coord y", 1,  -1, 100)
gen.add("erode_x",    int_t,    0, "Erode coord x", -1,  -1, 100)
gen.add("erode_y",    int_t,    0, "Erode coord y", -1,  -1, 100)
gen.add("close_x",    int_t,    0, "Close coord x", -1,  -1, 100)
gen.add("close_y",    int_t,    0, "Close coord y", -1,  -1, 100)
gen.add("dilate_x",    int_t,    0, "Dilate coord y", -1,  -1, 100)
gen.add("dilate_y",    int_t,    0, "Dilate coord y", -1,  -1, 100)
gen.add("erode_iters",    int_t,    0, "Structuring coord y", 0,  0, 100)
gen.add("close_iters",    int_t,    0, "Structuring coord y", 0,  0, 100)
gen.add("dilate_iters",    int_t,    0, "Structuring coord y", 1,  0, 100)

exit(gen.generate(PACKAGE, "individual_tracking_node", "BlobDetector"))